        -:    0:Source:/usr/include/c++/10/ext/new_allocator.h
        -:    0:Graph:/home/hkn_krz/CYK/cmake-build-debug-coverage/CMakeFiles/Test.dir/Test.cpp.gcno
        -:    0:Data:/home/hkn_krz/CYK/cmake-build-debug-coverage/CMakeFiles/Test.dir/Test.cpp.gcda
        -:    0:Runs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2020 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  /**
        -:   45:   *  @brief  An allocator that uses global new, as per [20.4].
        -:   46:   *  @ingroup allocators
        -:   47:   *
        -:   48:   *  This is precisely the allocator defined in the C++ Standard.
        -:   49:   *    - all allocation calls operator new
        -:   50:   *    - all deallocation calls operator delete
        -:   51:   *
        -:   52:   *  @tparam  _Tp  Type of allocated object.
        -:   53:   */
        -:   54:  template<typename _Tp>
        -:   55:    class new_allocator
        -:   56:    {
        -:   57:    public:
        -:   58:      typedef _Tp        value_type;
        -:   59:      typedef std::size_t     size_type;
        -:   60:      typedef std::ptrdiff_t  difference_type;
        -:   61:#if __cplusplus <= 201703L
        -:   62:      typedef _Tp*       pointer;
        -:   63:      typedef const _Tp* const_pointer;
        -:   64:      typedef _Tp&       reference;
        -:   65:      typedef const _Tp& const_reference;
        -:   66:
        -:   67:      template<typename _Tp1>
        -:   68:	struct rebind
        -:   69:	{ typedef new_allocator<_Tp1> other; };
        -:   70:#endif
        -:   71:
        -:   72:#if __cplusplus >= 201103L
        -:   73:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   74:      // 2103. propagate_on_container_move_assignment
        -:   75:      typedef std::true_type propagate_on_container_move_assignment;
        -:   76:#endif
        -:   77:
        -:   78:      _GLIBCXX20_CONSTEXPR
     918*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev called 12 returned 100% blocks executed 100%
       12:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
function _ZN9__gnu_cxx13new_allocatorImEC2Ev called 378 returned 100% blocks executed 100%
      378:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev called 6 returned 100% blocks executed 100%
        6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEEC2Ev called 12 returned 100% blocks executed 100%
       12:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2Ev called 21 returned 100% blocks executed 100%
       21:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEEC2Ev called 3 returned 100% blocks executed 100%
        3:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev called 96 returned 100% blocks executed 100%
       96:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEC2Ev called 6 returned 100% blocks executed 100%
        6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEEC2Ev called 6 returned 100% blocks executed 100%
        6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIbEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIbEC2Ev called 378 returned 100% blocks executed 100%
      378:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIcEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
        -:   81:      _GLIBCXX20_CONSTEXPR
     876*:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEEC2ERKS4_ called 42 returned 100% blocks executed 100%
       42:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEC2ERKS9_:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EEC2ERKS9_ called 12 returned 100% blocks executed 100%
       12:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ called 630 returned 100% blocks executed 100%
      630:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_ called 192 returned 100% blocks executed 100%
      192:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   83:
        -:   84:      template<typename _Tp1>
        -:   85:	_GLIBCXX20_CONSTEXPR
        -:   86:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   87:
        -:   88:#if __cplusplus <= 201703L
    1521*:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev called 12 returned 100% blocks executed 100%
       12:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImED2Ev:
function _ZN9__gnu_cxx13new_allocatorImED2Ev called 756 returned 100% blocks executed 100%
      756:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EED2Ev called 18 returned 100% blocks executed 100%
       18:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEED2Ev called 6 returned 100% blocks executed 100%
        6:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEED2Ev called 6 returned 100% blocks executed 100%
        6:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEED2Ev called 12 returned 100% blocks executed 100%
       12:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIbED2Ev:
function _ZN9__gnu_cxx13new_allocatorIbED2Ev called 378 returned 100% blocks executed 100%
      378:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEED2Ev called 42 returned 100% blocks executed 100%
       42:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEED2Ev called 3 returned 100% blocks executed 100%
        3:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev called 288 returned 100% blocks executed 100%
      288:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
function _ZN9__gnu_cxx13new_allocatorIcED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   90:
        -:   91:      pointer
        -:   92:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   93:      { return std::__addressof(__x); }
        -:   94:
        -:   95:      const_pointer
        -:   96:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   97:      { return std::__addressof(__x); }
        -:   98:#endif
        -:   99:
        -:  100:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:  101:      // about what the return value is when __n == 0.
        -:  102:      _GLIBCXX_NODISCARD _Tp*
      711:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
      711:  105:	if (__n > this->_M_max_size())
    #####:  106:	  std::__throw_bad_alloc();
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
      711:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv called 6 returned 100% blocks executed 83%
        6:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        6:  105:	if (__n > this->_M_max_size())
        6:  105-block  0
call    0 returned 6
branch  1 taken 0 (fallthrough)
branch  2 taken 6
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
        6:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        6:  115-block  0
call    0 returned 6
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8allocateEmPKv called 39 returned 100% blocks executed 83%
       39:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       39:  105:	if (__n > this->_M_max_size())
       39:  105-block  0
call    0 returned 39
branch  1 taken 0 (fallthrough)
branch  2 taken 39
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       39:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       39:  115-block  0
call    0 returned 39
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv called 96 returned 100% blocks executed 83%
       96:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       96:  105:	if (__n > this->_M_max_size())
       96:  105-block  0
call    0 returned 96
branch  1 taken 0 (fallthrough)
branch  2 taken 96
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       96:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       96:  115-block  0
call    0 returned 96
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE8allocateEmPKv called 39 returned 100% blocks executed 83%
       39:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       39:  105:	if (__n > this->_M_max_size())
       39:  105-block  0
call    0 returned 39
branch  1 taken 0 (fallthrough)
branch  2 taken 39
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       39:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       39:  115-block  0
call    0 returned 39
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE8allocateEmPKv called 96 returned 100% blocks executed 83%
       96:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       96:  105:	if (__n > this->_M_max_size())
       96:  105-block  0
call    0 returned 96
branch  1 taken 0 (fallthrough)
branch  2 taken 96
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       96:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       96:  115-block  0
call    0 returned 96
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8allocateEmPKv called 6 returned 100% blocks executed 83%
        6:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        6:  105:	if (__n > this->_M_max_size())
        6:  105-block  0
call    0 returned 6
branch  1 taken 0 (fallthrough)
branch  2 taken 6
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
        6:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        6:  115-block  0
call    0 returned 6
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv called 378 returned 100% blocks executed 83%
      378:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
      378:  105:	if (__n > this->_M_max_size())
      378:  105-block  0
call    0 returned 378
branch  1 taken 0 (fallthrough)
branch  2 taken 378
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
      378:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      378:  115-block  0
call    0 returned 378
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv called 6 returned 100% blocks executed 83%
        6:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        6:  105:	if (__n > this->_M_max_size())
        6:  105-block  0
call    0 returned 6
branch  1 taken 0 (fallthrough)
branch  2 taken 6
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
        6:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        6:  115-block  0
call    0 returned 6
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8allocateEmPKv called 42 returned 100% blocks executed 83%
       42:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       42:  105:	if (__n > this->_M_max_size())
       42:  105-block  0
call    0 returned 42
branch  1 taken 0 (fallthrough)
branch  2 taken 42
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       42:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       42:  115-block  0
call    0 returned 42
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE8allocateEmPKv called 3 returned 100% blocks executed 83%
        3:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        3:  105:	if (__n > this->_M_max_size())
        3:  105-block  0
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
        3:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        3:  115-block  0
call    0 returned 3
        -:  116:      }
------------------
        -:  117:
        -:  118:      // __p is not permitted to be a null pointer.
        -:  119:      void
      438:  120:      deallocate(_Tp* __p, size_type __t)
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
      438:  133:	::operator delete(__p
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m called 6 returned 100% blocks executed 100%
        6:  120:      deallocate(_Tp* __p, size_type __t)
        6:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
        6:  133:	::operator delete(__p
        6:  133-block  0
call    0 returned 6
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE10deallocateEPS2_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE10deallocateEPS2_m called 39 returned 100% blocks executed 100%
       39:  120:      deallocate(_Tp* __p, size_type __t)
       39:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       39:  133:	::operator delete(__p
       39:  133-block  0
call    0 returned 39
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE10deallocateEPS6_m:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE10deallocateEPS6_m called 39 returned 100% blocks executed 100%
       39:  120:      deallocate(_Tp* __p, size_type __t)
       39:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       39:  133:	::operator delete(__p
       39:  133-block  0
call    0 returned 39
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE10deallocateEPSG_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE10deallocateEPSG_m called 96 returned 100% blocks executed 100%
       96:  120:      deallocate(_Tp* __p, size_type __t)
       96:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       96:  133:	::operator delete(__p
       96:  133-block  0
call    0 returned 96
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m called 96 returned 100% blocks executed 100%
       96:  120:      deallocate(_Tp* __p, size_type __t)
       96:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       96:  133:	::operator delete(__p
       96:  133-block  0
call    0 returned 96
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE10deallocateEPS8_m:
function _ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE10deallocateEPS8_m called 6 returned 100% blocks executed 100%
        6:  120:      deallocate(_Tp* __p, size_type __t)
        6:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
        6:  133:	::operator delete(__p
        6:  133-block  0
call    0 returned 6
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm:
function _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm called 126 returned 100% blocks executed 100%
      126:  120:      deallocate(_Tp* __p, size_type __t)
      126:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
      126:  133:	::operator delete(__p
      126:  133-block  0
call    0 returned 126
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm:
function _ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm called 6 returned 100% blocks executed 100%
        6:  120:      deallocate(_Tp* __p, size_type __t)
        6:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
        6:  133:	::operator delete(__p
        6:  133-block  0
call    0 returned 6
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE10deallocateEPS3_m called 21 returned 100% blocks executed 100%
       21:  120:      deallocate(_Tp* __p, size_type __t)
       21:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       21:  133:	::operator delete(__p
       21:  133-block  0
call    0 returned 21
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE10deallocateEPS5_m called 3 returned 100% blocks executed 100%
        3:  120:      deallocate(_Tp* __p, size_type __t)
        3:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
        3:  133:	::operator delete(__p
        3:  133-block  0
call    0 returned 3
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
        -:  139:
        -:  140:#if __cplusplus <= 201703L
        -:  141:      size_type
       36:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
       36:  143:      { return _M_max_size(); }
------------------
_ZNK9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_EE8max_sizeEv called 6 returned 100% blocks executed 100%
        6:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
        6:  143:      { return _M_max_size(); }
        6:  143-block  0
call    0 returned 6
------------------
_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv called 6 returned 100% blocks executed 100%
        6:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
        6:  143:      { return _M_max_size(); }
        6:  143-block  0
call    0 returned 6
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE8max_sizeEv called 21 returned 100% blocks executed 100%
       21:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
       21:  143:      { return _M_max_size(); }
       21:  143-block  0
call    0 returned 21
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE8max_sizeEv called 3 returned 100% blocks executed 100%
        3:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
        3:  143:      { return _M_max_size(); }
        3:  143-block  0
call    0 returned 3
------------------
        -:  144:
        -:  145:#if __cplusplus >= 201103L
        -:  146:      template<typename _Up, typename... _Args>
        -:  147:	void
     417*:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
     417*:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE9constructIS3_JS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE9constructIS3_JS3_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE9constructIcJRKcEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE9constructIcJRKcEEEvPT_DpOT0_ called 39 returned 100% blocks executed 100%
       39:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       39:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       39:  150-block  0
call    0 returned 39
call    1 returned 39
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_ called 96 returned 100% blocks executed 83%
       96:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       96:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       96:  150-block  0
call    0 returned 96
call    1 returned 96
call    2 returned 96
branch  3 taken 96 (fallthrough)
branch  4 taken 0 (throw)
       96:  150-block  1
    $$$$$:  150-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE9constructIS5_JS3_IciEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE9constructIS5_JS3_IciEEEEvPT_DpOT0_ called 39 returned 100% blocks executed 100%
       39:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       39:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       39:  150-block  0
call    0 returned 39
call    1 returned 39
call    2 returned 39
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS4_EESC_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJRS4_EESC_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  150-block  1
    $$$$$:  150-block  2
call    8 never executed
    $$$$$:  150-block  3
    $$$$$:  150-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE9constructISF_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESM_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE9constructISF_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESM_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  150-block  1
    $$$$$:  150-block  2
call    8 never executed
    $$$$$:  150-block  3
    $$$$$:  150-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE9constructISF_JS2_IS8_SE_EEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE9constructISF_JS2_IS8_SE_EEEEvPT_DpOT0_ called 96 returned 100% blocks executed 100%
       96:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       96:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       96:  150-block  0
call    0 returned 96
call    1 returned 96
call    2 returned 96
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE9constructIS5_JRKS5_EEEvPT_DpOT0_ called 21 returned 100% blocks executed 83%
       21:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       21:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       21:  150-block  0
call    0 returned 21
call    1 returned 21
call    2 returned 21
branch  3 taken 21 (fallthrough)
branch  4 taken 0 (throw)
       21:  150-block  1
    $$$$$:  150-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE9constructIS3_JRKS3_EEEvPT_DpOT0_ called 126 returned 100% blocks executed 83%
      126:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      126:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      126:  150-block  0
call    0 returned 126
call    1 returned 126
call    2 returned 126
branch  3 taken 126 (fallthrough)
branch  4 taken 0 (throw)
      126:  150-block  1
    $$$$$:  150-block  2
call    5 never executed
------------------
        -:  151:
        -:  152:      template<typename _Up>
        -:  153:	void
     270*:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
     270*:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE7destroyIcEEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE7destroyIcEEvPT_ called 39 returned 100% blocks executed 100%
       39:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
       39:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKciELb0EEEE7destroyIS5_EEvPT_ called 39 returned 100% blocks executed 100%
       39:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
       39:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE7destroyISF_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIS8_St4lessIS8_ESaIS8_EEEEE7destroyISF_EEvPT_ called 96 returned 100% blocks executed 100%
       96:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
       96:  156:	{ __p->~_Up(); }
       96:  156-block  0
call    0 returned 96
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_ called 96 returned 100% blocks executed 100%
       96:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
       96:  156:	{ __p->~_Up(); }
       96:  156-block  0
call    0 returned 96
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIS1_IbSaIbEESaIS3_EEE7destroyIS5_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  156:	{ __p->~_Up(); }
    %%%%%:  156-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE7destroyIS3_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt6vectorIbSaIbEEE7destroyIS3_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  156:	{ __p->~_Up(); }
    %%%%%:  156-block  0
call    0 never executed
------------------
        -:  157:#else
        -:  158:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  159:      // 402. wrong new expression in [some_] allocator::construct
        -:  160:      void
        -:  161:      construct(pointer __p, const _Tp& __val)
        -:  162:      { ::new((void *)__p) _Tp(__val); }
        -:  163:
        -:  164:      void
        -:  165:      destroy(pointer __p) { __p->~_Tp(); }
        -:  166:#endif
        -:  167:#endif // ! C++20
        -:  168:
        -:  169:      template<typename _Up>
        -:  170:	friend _GLIBCXX20_CONSTEXPR bool
        -:  171:	operator==(const new_allocator&, const new_allocator<_Up>&)
        -:  172:	_GLIBCXX_NOTHROW
        -:  173:	{ return true; }
        -:  174:
        -:  175:#if __cpp_impl_three_way_comparison < 201907L
        -:  176:      template<typename _Up>
        -:  177:	friend _GLIBCXX20_CONSTEXPR bool
        -:  178:	operator!=(const new_allocator&, const new_allocator<_Up>&)
        -:  179:	_GLIBCXX_NOTHROW
        -:  180:	{ return false; }
        -:  181:#endif
        -:  182:
        -:  183:    private:
        -:  184:      _GLIBCXX_CONSTEXPR size_type
      747:  185:      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  186:      {
        -:  187:#if __PTRDIFF_MAX__ < __SIZE_MAX__
      747:  188:	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  189:#else
        -:  190:	return std::size_t(-1) / sizeof(_Tp);
        -:  191:#endif
        -:  192:      }
        -:  193:    };
        -:  194:
        -:  195:_GLIBCXX_END_NAMESPACE_VERSION
        -:  196:} // namespace
        -:  197:
        -:  198:#endif
