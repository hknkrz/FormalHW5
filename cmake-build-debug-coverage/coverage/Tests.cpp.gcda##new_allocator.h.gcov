        -:    0:Source:/usr/include/c++/10/ext/new_allocator.h
        -:    0:Graph:/home/hkn_krz/formalHW5/cmake-build-debug-coverage/CMakeFiles/formal.dir/Tests.cpp.gcno
        -:    0:Data:/home/hkn_krz/formalHW5/cmake-build-debug-coverage/CMakeFiles/formal.dir/Tests.cpp.gcda
        -:    0:Runs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2020 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  /**
        -:   45:   *  @brief  An allocator that uses global new, as per [20.4].
        -:   46:   *  @ingroup allocators
        -:   47:   *
        -:   48:   *  This is precisely the allocator defined in the C++ Standard.
        -:   49:   *    - all allocation calls operator new
        -:   50:   *    - all deallocation calls operator delete
        -:   51:   *
        -:   52:   *  @tparam  _Tp  Type of allocated object.
        -:   53:   */
        -:   54:  template<typename _Tp>
        -:   55:    class new_allocator
        -:   56:    {
        -:   57:    public:
        -:   58:      typedef _Tp        value_type;
        -:   59:      typedef std::size_t     size_type;
        -:   60:      typedef std::ptrdiff_t  difference_type;
        -:   61:#if __cplusplus <= 201703L
        -:   62:      typedef _Tp*       pointer;
        -:   63:      typedef const _Tp* const_pointer;
        -:   64:      typedef _Tp&       reference;
        -:   65:      typedef const _Tp& const_reference;
        -:   66:
        -:   67:      template<typename _Tp1>
        -:   68:	struct rebind
        -:   69:	{ typedef new_allocator<_Tp1> other; };
        -:   70:#endif
        -:   71:
        -:   72:#if __cplusplus >= 201103L
        -:   73:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   74:      // 2103. propagate_on_container_move_assignment
        -:   75:      typedef std::true_type propagate_on_container_move_assignment;
        -:   76:#endif
        -:   77:
        -:   78:      _GLIBCXX20_CONSTEXPR
     949*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEEC2Ev called 6 returned 100% blocks executed 100%
        6:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEEC2Ev called 14 returned 100% blocks executed 100%
       14:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPP8AuthomatEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPP8AuthomatEC2Ev called 34 returned 100% blocks executed 100%
       34:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEEC2Ev called 3 returned 100% blocks executed 100%
        3:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEEC2Ev called 7 returned 100% blocks executed 100%
        7:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIP8AuthomatEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIP8AuthomatEC2Ev called 17 returned 100% blocks executed 100%
       17:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
function _ZN9__gnu_cxx13new_allocatorImEC2Ev called 82 returned 100% blocks executed 100%
       82:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEEC2Ev called 57 returned 100% blocks executed 100%
       57:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEEC2Ev called 7 returned 100% blocks executed 100%
        7:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev called 419 returned 100% blocks executed 100%
      419:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEEC2Ev called 102 returned 100% blocks executed 100%
      102:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIbEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIbEC2Ev called 82 returned 100% blocks executed 100%
       82:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIiEC2Ev called 119 returned 100% blocks executed 100%
      119:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIcEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
        -:   81:      _GLIBCXX20_CONSTEXPR
     462*:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ called 82 returned 100% blocks executed 100%
       82:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2ERKS3_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2ERKS3_ called 366 returned 100% blocks executed 100%
      366:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ called 14 returned 100% blocks executed 100%
       14:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   83:
        -:   84:      template<typename _Tp1>
        -:   85:	_GLIBCXX20_CONSTEXPR
        -:   86:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   87:
        -:   88:#if __cplusplus <= 201703L
    1105*:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEED2Ev called 6 returned 100% blocks executed 100%
        6:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEED2Ev called 14 returned 100% blocks executed 100%
       14:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPP8AuthomatED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPP8AuthomatED2Ev called 34 returned 100% blocks executed 100%
       34:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEED2Ev called 3 returned 100% blocks executed 100%
        3:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImED2Ev:
function _ZN9__gnu_cxx13new_allocatorImED2Ev called 164 returned 100% blocks executed 100%
      164:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEED2Ev called 7 returned 100% blocks executed 100%
        7:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIP8AuthomatED2Ev:
function _ZN9__gnu_cxx13new_allocatorIP8AuthomatED2Ev called 17 returned 100% blocks executed 100%
       17:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEED2Ev called 57 returned 100% blocks executed 100%
       57:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIbED2Ev:
function _ZN9__gnu_cxx13new_allocatorIbED2Ev called 82 returned 100% blocks executed 100%
       82:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEED2Ev called 7 returned 100% blocks executed 100%
        7:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev called 683 returned 100% blocks executed 100%
      683:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiED2Ev:
function _ZN9__gnu_cxx13new_allocatorIiED2Ev called 31 returned 100% blocks executed 100%
       31:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
function _ZN9__gnu_cxx13new_allocatorIcED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   90:
        -:   91:      pointer
        -:   92:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   93:      { return std::__addressof(__x); }
        -:   94:
        -:   95:      const_pointer
        -:   96:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   97:      { return std::__addressof(__x); }
        -:   98:#endif
        -:   99:
        -:  100:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:  101:      // about what the return value is when __n == 0.
        -:  102:      _GLIBCXX_NODISCARD _Tp*
     2522:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
     2522:  105:	if (__n > this->_M_max_size())
    #####:  106:	  std::__throw_bad_alloc();
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
     2522:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEmPKv called 697 returned 100% blocks executed 83%
      697:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
      697:  105:	if (__n > this->_M_max_size())
      697:  105-block  0
call    0 returned 697
branch  1 taken 0 (fallthrough)
branch  2 taken 697
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
      697:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      697:  115-block  0
call    0 returned 697
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8allocateEmPKv called 11 returned 100% blocks executed 83%
       11:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       11:  105:	if (__n > this->_M_max_size())
       11:  105-block  0
call    0 returned 11
branch  1 taken 0 (fallthrough)
branch  2 taken 11
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       11:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       11:  115-block  0
call    0 returned 11
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE8allocateEmPKv called 171 returned 100% blocks executed 83%
      171:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
      171:  105:	if (__n > this->_M_max_size())
      171:  105-block  0
call    0 returned 171
branch  1 taken 0 (fallthrough)
branch  2 taken 171
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
      171:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      171:  115-block  0
call    0 returned 171
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEE8allocateEmPKv called 3 returned 100% blocks executed 83%
        3:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        3:  105:	if (__n > this->_M_max_size())
        3:  105-block  0
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
        3:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        3:  115-block  0
call    0 returned 3
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv called 82 returned 100% blocks executed 83%
       82:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       82:  105:	if (__n > this->_M_max_size())
       82:  105-block  0
call    0 returned 82
branch  1 taken 0 (fallthrough)
branch  2 taken 82
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       82:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       82:  115-block  0
call    0 returned 82
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE8allocateEmPKv called 1076 returned 100% blocks executed 83%
     1076:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
     1076:  105:	if (__n > this->_M_max_size())
     1076:  105-block  0
call    0 returned 1076
branch  1 taken 0 (fallthrough)
branch  2 taken 1076
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
     1076:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
     1076:  115-block  0
call    0 returned 1076
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE8allocateEmPKv called 15 returned 100% blocks executed 83%
       15:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       15:  105:	if (__n > this->_M_max_size())
       15:  105-block  0
call    0 returned 15
branch  1 taken 0 (fallthrough)
branch  2 taken 15
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       15:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       15:  115-block  0
call    0 returned 15
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE8allocateEmPKv called 75 returned 100% blocks executed 83%
       75:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       75:  105:	if (__n > this->_M_max_size())
       75:  105-block  0
call    0 returned 75
branch  1 taken 0 (fallthrough)
branch  2 taken 75
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       75:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       75:  115-block  0
call    0 returned 75
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEE8allocateEmPKv called 7 returned 100% blocks executed 83%
        7:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        7:  105:	if (__n > this->_M_max_size())
        7:  105-block  0
call    0 returned 7
branch  1 taken 0 (fallthrough)
branch  2 taken 7
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
        7:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        7:  115-block  0
call    0 returned 7
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIP8AuthomatE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIP8AuthomatE8allocateEmPKv called 17 returned 100% blocks executed 83%
       17:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       17:  105:	if (__n > this->_M_max_size())
       17:  105-block  0
call    0 returned 17
branch  1 taken 0 (fallthrough)
branch  2 taken 17
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       17:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       17:  115-block  0
call    0 returned 17
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPP8AuthomatE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIPP8AuthomatE8allocateEmPKv called 17 returned 100% blocks executed 83%
       17:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
       17:  105:	if (__n > this->_M_max_size())
       17:  105-block  0
call    0 returned 17
branch  1 taken 0 (fallthrough)
branch  2 taken 17
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
       17:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       17:  115-block  0
call    0 returned 17
        -:  116:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv called 351 returned 100% blocks executed 83%
      351:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
      351:  105:	if (__n > this->_M_max_size())
      351:  105-block  0
call    0 returned 351
branch  1 taken 0 (fallthrough)
branch  2 taken 351
    #####:  106:	  std::__throw_bad_alloc();
    %%%%%:  106-block  0
call    0 never executed
        -:  107:
        -:  108:#if __cpp_aligned_new
        -:  109:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  110:	  {
        -:  111:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  112:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  113:	  }
        -:  114:#endif
      351:  115:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      351:  115-block  0
call    0 returned 351
        -:  116:      }
------------------
        -:  117:
        -:  118:      // __p is not permitted to be a null pointer.
        -:  119:      void
     1391:  120:      deallocate(_Tp* __p, size_type __t)
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
     1391:  133:	::operator delete(__p
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE10deallocateEPS5_m called 171 returned 100% blocks executed 100%
      171:  120:      deallocate(_Tp* __p, size_type __t)
      171:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
      171:  133:	::operator delete(__p
      171:  133-block  0
call    0 returned 171
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE10deallocateEPS2_m:
function _ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE10deallocateEPS2_m called 11 returned 100% blocks executed 100%
       11:  120:      deallocate(_Tp* __p, size_type __t)
       11:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       11:  133:	::operator delete(__p
       11:  133-block  0
call    0 returned 11
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE10deallocateEPSB_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE10deallocateEPSB_m called 75 returned 100% blocks executed 100%
       75:  120:      deallocate(_Tp* __p, size_type __t)
       75:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       75:  133:	::operator delete(__p
       75:  133-block  0
call    0 returned 75
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE10deallocateEPS6_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE10deallocateEPS6_m called 197 returned 100% blocks executed 100%
      197:  120:      deallocate(_Tp* __p, size_type __t)
      197:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
      197:  133:	::operator delete(__p
      197:  133-block  0
call    0 returned 197
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_m:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_m called 552 returned 100% blocks executed 100%
      552:  120:      deallocate(_Tp* __p, size_type __t)
      552:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
      552:  133:	::operator delete(__p
      552:  133-block  0
call    0 returned 552
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE10deallocateEPS5_m called 15 returned 100% blocks executed 100%
       15:  120:      deallocate(_Tp* __p, size_type __t)
       15:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       15:  133:	::operator delete(__p
       15:  133-block  0
call    0 returned 15
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIP8AuthomatE10deallocateEPS2_m:
function _ZN9__gnu_cxx13new_allocatorIP8AuthomatE10deallocateEPS2_m called 17 returned 100% blocks executed 100%
       17:  120:      deallocate(_Tp* __p, size_type __t)
       17:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       17:  133:	::operator delete(__p
       17:  133-block  0
call    0 returned 17
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEE10deallocateEPS3_m:
function _ZN9__gnu_cxx13new_allocatorIPSt5tupleIJiiiEEE10deallocateEPS3_m called 3 returned 100% blocks executed 100%
        3:  120:      deallocate(_Tp* __p, size_type __t)
        3:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
        3:  133:	::operator delete(__p
        3:  133-block  0
call    0 returned 3
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm:
function _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm called 82 returned 100% blocks executed 100%
       82:  120:      deallocate(_Tp* __p, size_type __t)
       82:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       82:  133:	::operator delete(__p
       82:  133-block  0
call    0 returned 82
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEE10deallocateEPS6_m:
function _ZN9__gnu_cxx13new_allocatorIPSt3setIiSt4lessIiESaIiEEE10deallocateEPS6_m called 7 returned 100% blocks executed 100%
        7:  120:      deallocate(_Tp* __p, size_type __t)
        7:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
        7:  133:	::operator delete(__p
        7:  133-block  0
call    0 returned 7
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPP8AuthomatE10deallocateEPS3_m:
function _ZN9__gnu_cxx13new_allocatorIPP8AuthomatE10deallocateEPS3_m called 17 returned 100% blocks executed 100%
       17:  120:      deallocate(_Tp* __p, size_type __t)
       17:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
       17:  133:	::operator delete(__p
       17:  133-block  0
call    0 returned 17
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim:
function _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim called 244 returned 100% blocks executed 100%
      244:  120:      deallocate(_Tp* __p, size_type __t)
      244:  120-block  0
        -:  121:      {
        -:  122:#if __cpp_aligned_new
        -:  123:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  124:	  {
        -:  125:	    ::operator delete(__p,
        -:  126:# if __cpp_sized_deallocation
        -:  127:			      __t * sizeof(_Tp),
        -:  128:# endif
        -:  129:			      std::align_val_t(alignof(_Tp)));
        -:  130:	    return;
        -:  131:	  }
        -:  132:#endif
      244:  133:	::operator delete(__p
      244:  133-block  0
call    0 returned 244
        -:  134:#if __cpp_sized_deallocation
        -:  135:			  , __t * sizeof(_Tp)
        -:  136:#endif
        -:  137:			 );
        -:  138:      }
------------------
        -:  139:
        -:  140:#if __cplusplus <= 201703L
        -:  141:      size_type
     718*:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
     718*:  143:      { return _M_max_size(); }
------------------
_ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE8max_sizeEv called 8 returned 100% blocks executed 100%
        8:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
        8:  143:      { return _M_max_size(); }
        8:  143-block  0
call    0 returned 8
------------------
_ZNK9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE8max_sizeEv called 8 returned 100% blocks executed 100%
        8:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
        8:  143:      { return _M_max_size(); }
        8:  143-block  0
call    0 returned 8
------------------
_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv called 702 returned 100% blocks executed 100%
      702:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
      702:  143:      { return _M_max_size(); }
      702:  143-block  0
call    0 returned 702
------------------
_ZNK9__gnu_cxx13new_allocatorIP8AuthomatE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIP8AuthomatE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  142:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  143:      { return _M_max_size(); }
    %%%%%:  143-block  0
call    0 never executed
------------------
        -:  144:
        -:  145:#if __cplusplus >= 201103L
        -:  146:      template<typename _Up, typename... _Args>
        -:  147:	void
    3115*:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    3115*:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE9constructIS5_JRS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE9constructIS5_JRS5_EEEvPT_DpOT0_ called 346 returned 100% blocks executed 100%
      346:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      346:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      346:  150-block  0
call    0 returned 346
call    1 returned 346
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE9constructIS4_JS4_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE9constructIS4_JS4_EEEvPT_DpOT0_ called 171 returned 100% blocks executed 100%
      171:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      171:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      171:  150-block  0
call    0 returned 171
call    1 returned 171
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJiEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJiEEEvPT_DpOT0_ called 95 returned 100% blocks executed 100%
       95:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       95:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       95:  150-block  0
call    0 returned 95
call    1 returned 95
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE9constructISA_JSA_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE9constructISA_JSA_EEEvPT_DpOT0_ called 75 returned 100% blocks executed 83%
       75:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       75:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       75:  150-block  0
call    0 returned 75
call    1 returned 75
call    2 returned 75
branch  3 taken 75 (fallthrough)
branch  4 taken 0 (throw)
       75:  150-block  1
    $$$$$:  150-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE9constructIS5_JS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE9constructIS5_JS5_EEEvPT_DpOT0_ called 562 returned 100% blocks executed 100%
      562:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      562:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      562:  150-block  0
call    0 returned 562
call    1 returned 562
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_ called 680 returned 100% blocks executed 100%
      680:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      680:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      680:  150-block  0
call    0 returned 680
call    1 returned 680
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOcEESB_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJOcEESB_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  150-block  1
    $$$$$:  150-block  2
call    8 never executed
    $$$$$:  150-block  3
    $$$$$:  150-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  150-block  1
    $$$$$:  150-block  2
call    8 never executed
    $$$$$:  150-block  3
    $$$$$:  150-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE9constructIS5_JS2_IiS4_EEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE9constructIS5_JS2_IiS4_EEEEvPT_DpOT0_ called 168 returned 100% blocks executed 100%
      168:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      168:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      168:  150-block  0
call    0 returned 168
call    1 returned 168
call    2 returned 168
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESH_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESH_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  150-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  150-block  1
    $$$$$:  150-block  2
call    8 never executed
    $$$$$:  150-block  3
    $$$$$:  150-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE9constructIS2_JS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE9constructIS2_JS2_EEEvPT_DpOT0_ called 407 returned 100% blocks executed 100%
      407:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      407:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      407:  150-block  0
call    0 returned 407
call    1 returned 407
call    2 returned 407
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE9constructIS5_JS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE9constructIS5_JS5_EEEvPT_DpOT0_ called 7 returned 100% blocks executed 100%
        7:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        7:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        7:  150-block  0
call    0 returned 7
call    1 returned 7
call    2 returned 7
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE9constructIS5_JRKS5_EEEvPT_DpOT0_ called 94 returned 100% blocks executed 83%
       94:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       94:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       94:  150-block  0
call    0 returned 94
call    1 returned 94
call    2 returned 94
branch  3 taken 94 (fallthrough)
branch  4 taken 0 (throw)
       94:  150-block  1
    $$$$$:  150-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ called 139 returned 100% blocks executed 100%
      139:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      139:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      139:  150-block  0
call    0 returned 139
call    1 returned 139
------------------
_ZN9__gnu_cxx13new_allocatorIP8AuthomatE9constructIS2_JRKS2_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIP8AuthomatE9constructIS2_JRKS2_EEEvPT_DpOT0_ called 176 returned 100% blocks executed 100%
      176:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      176:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      176:  150-block  0
call    0 returned 176
call    1 returned 176
------------------
_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ called 195 returned 100% blocks executed 100%
      195:  148:	construct(_Up* __p, _Args&&... __args)
        -:  149:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      195:  150:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      195:  150-block  0
call    0 returned 195
call    1 returned 195
------------------
        -:  151:
        -:  152:      template<typename _Up>
        -:  153:	void
     1743:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
     1743:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE7destroyIS4_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKcbEEE7destroyIS4_EEvPT_ called 171 returned 100% blocks executed 100%
      171:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
      171:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE7destroyISA_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt3setIiSt4lessIiESaIiEES2_IibEEEE7destroyISA_EEvPT_ called 75 returned 100% blocks executed 100%
       75:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
       75:  156:	{ __p->~_Up(); }
       75:  156-block  0
call    0 returned 75
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiS2_IciEEEE7destroyIS5_EEvPT_ called 197 returned 100% blocks executed 100%
      197:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
      197:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE7destroyIiEEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE7destroyIiEEvPT_ called 630 returned 100% blocks executed 100%
      630:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
      630:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt5tupleIJiiiEEE7destroyIS2_EEvPT_ called 404 returned 100% blocks executed 100%
      404:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
      404:  156:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISt3setIiSt4lessIiESaIiEEE7destroyIS5_EEvPT_ called 101 returned 100% blocks executed 100%
      101:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
      101:  156:	{ __p->~_Up(); }
      101:  156-block  0
call    0 returned 101
------------------
_ZN9__gnu_cxx13new_allocatorIP8AuthomatE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIP8AuthomatE7destroyIS2_EEvPT_ called 165 returned 100% blocks executed 100%
      165:  154:	destroy(_Up* __p)
        -:  155:	noexcept(std::is_nothrow_destructible<_Up>::value)
      165:  156:	{ __p->~_Up(); }
------------------
        -:  157:#else
        -:  158:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  159:      // 402. wrong new expression in [some_] allocator::construct
        -:  160:      void
        -:  161:      construct(pointer __p, const _Tp& __val)
        -:  162:      { ::new((void *)__p) _Tp(__val); }
        -:  163:
        -:  164:      void
        -:  165:      destroy(pointer __p) { __p->~_Tp(); }
        -:  166:#endif
        -:  167:#endif // ! C++20
        -:  168:
        -:  169:      template<typename _Up>
        -:  170:	friend _GLIBCXX20_CONSTEXPR bool
        -:  171:	operator==(const new_allocator&, const new_allocator<_Up>&)
        -:  172:	_GLIBCXX_NOTHROW
        -:  173:	{ return true; }
        -:  174:
        -:  175:#if __cpp_impl_three_way_comparison < 201907L
        -:  176:      template<typename _Up>
        -:  177:	friend _GLIBCXX20_CONSTEXPR bool
        -:  178:	operator!=(const new_allocator&, const new_allocator<_Up>&)
        -:  179:	_GLIBCXX_NOTHROW
        -:  180:	{ return false; }
        -:  181:#endif
        -:  182:
        -:  183:    private:
        -:  184:      _GLIBCXX_CONSTEXPR size_type
     3240:  185:      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  186:      {
        -:  187:#if __PTRDIFF_MAX__ < __SIZE_MAX__
     3240:  188:	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  189:#else
        -:  190:	return std::size_t(-1) / sizeof(_Tp);
        -:  191:#endif
        -:  192:      }
        -:  193:    };
        -:  194:
        -:  195:_GLIBCXX_END_NAMESPACE_VERSION
        -:  196:} // namespace
        -:  197:
        -:  198:#endif
